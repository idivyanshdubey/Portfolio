{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\warma\\\\OneDrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:\\\\Users\\\\warma\\\\OneDrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\warma\\\\OneDrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\warma\\\\OneDrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\n/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses, hasA11yProp } from './shared/src/utils.js';\nvar Icon = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n    color = _ref$color === void 0 ? \"currentColor\" : _ref$color,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 24 : _ref$size,\n    _ref$strokeWidth = _ref.strokeWidth,\n    strokeWidth = _ref$strokeWidth === void 0 ? 2 : _ref$strokeWidth,\n    absoluteStrokeWidth = _ref.absoluteStrokeWidth,\n    _ref$className = _ref.className,\n    className = _ref$className === void 0 ? \"\" : _ref$className,\n    children = _ref.children,\n    iconNode = _ref.iconNode,\n    rest = _objectWithoutProperties(_ref, [\"color\", \"size\", \"strokeWidth\", \"absoluteStrokeWidth\", \"className\", \"children\", \"iconNode\"]);\n  return createElement(\"svg\", _objectSpread({\n    ref: ref\n  }, defaultAttributes, {\n    width: size,\n    height: size,\n    stroke: color,\n    strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n    className: mergeClasses(\"lucide\", className)\n  }, !children && !hasA11yProp(rest) && {\n    \"aria-hidden\": \"true\"\n  }, rest), [].concat(_toConsumableArray(iconNode.map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n      tag = _ref3[0],\n      attrs = _ref3[1];\n    return createElement(tag, attrs);\n  })), _toConsumableArray(Array.isArray(children) ? children : [children])));\n});\nexport { Icon as default };","map":null,"metadata":{},"sourceType":"module"}