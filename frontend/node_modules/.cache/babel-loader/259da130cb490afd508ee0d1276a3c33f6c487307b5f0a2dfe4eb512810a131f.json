{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\warma\\\\OneDrive\\\\Desktop\\\\Project\\\\frontend\\\\src\\\\contexts\\\\ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(undefined);\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [isDark, setIsDark] = useState(() => {\n    const saved = localStorage.getItem('theme');\n    return saved ? saved === 'dark' : window.matchMedia('(prefers-color-scheme: dark)').matches;\n  });\n  useEffect(() => {\n    localStorage.setItem('theme', isDark ? 'dark' : 'light');\n    document.documentElement.classList.toggle('dark', isDark);\n\n    // Add transition class for smooth theme changes\n    document.documentElement.classList.add('theme-transition');\n\n    // Remove transition class after animation completes\n    const timer = setTimeout(() => {\n      document.documentElement.classList.remove('theme-transition');\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [isDark]);\n  const toggleTheme = () => {\n    setIsDark(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDark,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"x7nSQIGNGtUCgVtvQNv4VvWHY7Q=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","undefined","useTheme","_s","context","Error","ThemeProvider","children","_s2","isDark","setIsDark","saved","localStorage","getItem","window","matchMedia","matches","setItem","document","documentElement","classList","toggle","add","timer","setTimeout","remove","clearTimeout","toggleTheme","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/warma/OneDrive/Desktop/Project/frontend/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\ninterface ThemeContextType {\r\n  isDark: boolean;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface ThemeProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    const saved = localStorage.getItem('theme');\r\n    return saved ? saved === 'dark' : window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('theme', isDark ? 'dark' : 'light');\r\n    document.documentElement.classList.toggle('dark', isDark);\r\n    \r\n    // Add transition class for smooth theme changes\r\n    document.documentElement.classList.add('theme-transition');\r\n    \r\n    // Remove transition class after animation completes\r\n    const timer = setTimeout(() => {\r\n      document.documentElement.classList.remove('theme-transition');\r\n    }, 300);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, [isDark]);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9E,MAAMC,YAAY,gBAAGN,aAAa,CAA+BO,SAAS,CAAC;AAE3E,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGT,UAAU,CAACK,YAAY,CAAC;EACxC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAYrB,OAAO,MAAMI,aAA2C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC3E,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,MAAM;IACzC,MAAMe,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAOF,KAAK,GAAGA,KAAK,KAAK,MAAM,GAAGG,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;EAC7F,CAAC,CAAC;EAEFnB,SAAS,CAAC,MAAM;IACde,YAAY,CAACK,OAAO,CAAC,OAAO,EAAER,MAAM,GAAG,MAAM,GAAG,OAAO,CAAC;IACxDS,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEZ,MAAM,CAAC;;IAEzD;IACAS,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,GAAG,CAAC,kBAAkB,CAAC;;IAE1D;IACA,MAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BN,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACK,MAAM,CAAC,kBAAkB,CAAC;IAC/D,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAMC,YAAY,CAACH,KAAK,CAAC;EAClC,CAAC,EAAE,CAACd,MAAM,CAAC,CAAC;EAEZ,MAAMkB,WAAW,GAAGA,CAAA,KAAM;IACxBjB,SAAS,CAACkB,IAAI,IAAI,CAACA,IAAI,CAAC;EAC1B,CAAC;EAED,oBACE7B,OAAA,CAACC,YAAY,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAErB,MAAM;MAAEkB;IAAY,CAAE;IAAApB,QAAA,EACnDA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAC1B,GAAA,CA9BWF,aAA2C;AAAA6B,EAAA,GAA3C7B,aAA2C;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}